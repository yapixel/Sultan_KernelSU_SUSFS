name: Build and Release Sultan Kernels

permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true
      dry_run:
        description: 'Dry run mode (build without tagging/releasing)?'
        required: false
        type: boolean
        default: false

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release || inputs.dry_run }}
    outputs:
      new_tag: ${{ steps.generate-tag.outputs.new_tag }}
    env:
      REPO_OWNER: yapixel
      REPO_NAME: Sultan_KernelSU_SUSFS
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate New Tag
        id: generate-tag
        run: |
          # Fetch the latest tag from this repository
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.5.12-r0"  # Default to v1.5.12-r0 if no tag exists
          fi
          
          # Increment the suffix (e.g., v1.5.12-r0 becomes v1.5.12-r1)
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          
          # Output the new tag to be used
          echo "New tag: $NEW_TAG"
          
          # Set the new tag as output
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

  build-kernel-zuma-rksu:
    uses: ./.github/workflows/sultan.yml
    secrets: inherit
    needs: generate-tag
    if: ${{ inputs.make_release || inputs.dry_run }}
    with:
      codename: "zuma"
      repo: "android_kernel_google_zuma"
      android_version: "android14"
      kernel_version: "6.1"
      release_tag: ${{ needs.generate-tag.outputs.new_tag }}

  

  trigger-release:
    runs-on: ubuntu-latest
    needs:
      - generate-tag
      - build-kernel-zuma-rksu
      
    if: ${{ inputs.make_release && !inputs.dry_run }}
    env:
      GH_TOKEN: ${{ github.token }}
      NEW_TAG: ${{ needs.generate-tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create and Push Tag
        run: |
          # Create and push the tag
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
          echo "Tag ${{ env.NEW_TAG }} created and pushed."

      - name: Set Build Date
        id: set-build-date
        run: |
          BUILD_DATE=$(date '+%Y-%m-%d %H:%M:%S UTC')
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

      - name: Extract SUSFS Version
        id: extract-version
        run: |
          SUSFS_VERSION=$(echo "${{ env.NEW_TAG }}" | cut -d'-' -f1 | sed 's/v//')
          echo "susfs_version=v$SUSFS_VERSION" >> $GITHUB_OUTPUT

      - name: Set Release Name
        run: |
          SUSFS_VERSION="${{ steps.extract-version.outputs.susfs_version }}"
          echo "RELEASE_NAME=*TEST BUILD* Sultan Kernels With KernelSU/MKSU & SUSFS $SUSFS_VERSION *TEST BUILD*" >> $GITHUB_ENV

      - name: Define Release Notes
        id: define-release-notes
        run: |
          BUILD_DATE="${{ steps.set-build-date.outputs.build_date }}"
          SUSFS_VERSION="${{ steps.extract-version.outputs.susfs_version }}"
          RELEASE_NOTES=$(cat << EOF
            This release contains KernelSU and MKSU variants with SUSFS $SUSFS_VERSION
            
            ⚠️ **COMPATIBILITY NOTICE** ⚠️
            Please ensure compatibility by comparing release dates with official Sultan kernel releases:
            - Check official Sultan releases: https://github.com/kerneltoast/android_kernel_google_gs201/releases
            - This build is based on the latest Sultan kernel commits as of build date
            - Always verify your device's Android version matches the kernel target (Android 14)
            - Recommended to use kernels released within 30 days of official Sultan updates
            
            Module: 
            -> https://github.com/sidex15/ksu_module_susfs
            
            Managers:
            -> https://github.com/KOWX712/KernelSU
            -> https://github.com/SukiSU-Ultra/SukiSU-Ultra
            
            Features:
            [+] KernelSU Magic Managers v1.0.5
            [+] SUSFS $SUSFS_VERSION
            [+] Maphide LineageOS Detections
            [+] Futile Maphide for jit-zygote-cache Detections
            [+] Magic Mount Support
            
            📅 **Release Date Compatibility Check:**
            - Built on: $BUILD_DATE
          EOF
          )
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: true
          name: ${{ env.RELEASE_NAME }}
          body: ${{ steps.define-release-notes.outputs.release_notes }}
          token: ${{ github.token }}

      - name: Upload Release Assets Dynamically
        run: |
          if [ -z "$(ls ./downloaded-artifacts/kernel-*/* 2>/dev/null)" ]; then
            echo "Error: No artifacts found in ./downloaded-artifacts/kernel-*/*"
            exit 1
          fi
          for file in ./downloaded-artifacts/kernel-*/*; do
            if [ -d "$file" ]; then
              continue
            fi
            echo "Uploading $file..."
            gh release upload ${{ env.NEW_TAG }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls -la ./downloaded-artifacts/**/*
